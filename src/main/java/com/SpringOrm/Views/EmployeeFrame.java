/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.SpringOrm.Views;

import com.SpringOrm.Entities.Employee;
import com.SpringOrm.Entities.User;
import com.SpringOrmCrud.Dao.EmployeeDao;
import com.SpringOrmCrud.Dao.UserDao;
import com.mysql.cj.x.protobuf.MysqlxCrud;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.beans.factory.annotation.Value;

/**
 *
 * @author OM
 */
public class EmployeeFrame extends javax.swing.JFrame {
    
    @Autowired
    EmployeeDao employeeDao;

    
    Employee employee = new Employee() ;
    
    private int id = 0;
    /**
     * Creates new form EmployeeFrame
     */
    public EmployeeFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        phoneTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        addressTextField = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        submitButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        deleteButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeeTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridLayout(2, 1, 10, 10));

        jPanel2.setLayout(new java.awt.GridLayout(4, 2, 10, 10));

        jLabel1.setText("EMPLOYEE NAME");
        jPanel2.add(jLabel1);
        jPanel2.add(nameTextField);

        jLabel2.setText("EMPLOYEE PHONE");
        jPanel2.add(jLabel2);
        jPanel2.add(phoneTextField);

        jLabel3.setText("EMPLOYEE ADDRESS");
        jPanel2.add(jLabel3);
        jPanel2.add(addressTextField);

        jPanel4.setLayout(new java.awt.GridLayout(1, 2, 10, 10));

        submitButton.setText("SUBMIT");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        jPanel4.add(submitButton);

        updateButton.setText("UPDATE");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        jPanel4.add(updateButton);

        jPanel2.add(jPanel4);

        jPanel5.setLayout(new java.awt.GridLayout(1, 2, 10, 10));

        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jPanel5.add(deleteButton);

        resetButton.setText("RESET");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        jPanel5.add(resetButton);

        jPanel2.add(jPanel5);

        jPanel1.add(jPanel2);

        jPanel3.setLayout(new java.awt.GridLayout(1, 1, 10, 10));

        employeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        employeeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeeTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(employeeTable);

        jPanel3.add(jScrollPane1);

        jPanel1.add(jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        
        String name = nameTextField.getText().toUpperCase();
        String phone = phoneTextField.getText().toUpperCase();
        String address = addressTextField.getText().toUpperCase();
        
        if(!(name.isEmpty() || phone.isEmpty() || address.isEmpty()))
        {
            employee.setEmployeeName(name);
        employee.setEmployeePhone(Long.parseLong(phone));
        employee.setEmployeeAddress(address);
        employee.setStatus(1);
        
        this.employeeDao.insert(employee);
        
            JOptionPane.showMessageDialog(this, "Record Inserted Succesfully!!" , "Person CRUD",JOptionPane.INFORMATION_MESSAGE);
            setTableData();
            resetData();
        }
        else
             JOptionPane.showMessageDialog(this, "All the fields are mandatory to fill, Record not Inserted" , "Person CRUD",JOptionPane.ERROR_MESSAGE);
        
        
        
    }//GEN-LAST:event_submitButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        String name = nameTextField.getText().toUpperCase();
        String phone = phoneTextField.getText().toUpperCase();
        String address = addressTextField.getText().toUpperCase();
        if(!(name.isEmpty() || phone.isEmpty() || address.isEmpty()))
        {
            employee.setEmployeeName(name);
        employee.setEmployeePhone(Long.parseLong(phone));
        employee.setEmployeeAddress(address);
        employee.setStatus(1);
        this.employeeDao.update(employee);
        
        JOptionPane.showMessageDialog(this, "Record Updated Succesfully!!" , "Person CRUD",JOptionPane.INFORMATION_MESSAGE);
            setTableData();
             resetData();
            
        }
        else
             JOptionPane.showMessageDialog(this, "All the fields are mandatory to fill, Record not Updated" , "Person CRUD",JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        
        this.employeeDao.delete(id);
        setTableData();
        
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void employeeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeTableMouseClicked
        // TODO add your handling code here:
        
         id = Integer.parseInt(employeeTable.getValueAt(employeeTable.getSelectedRow(), 0).toString());
         Employee employee = employeeDao.getEmployee(id);
         nameTextField.setText(employee.getEmployeeName());
         phoneTextField.setText(employee.getEmployeePhone()+"");
         addressTextField.setText(employee.getEmployeeAddress());
         
    }//GEN-LAST:event_employeeTableMouseClicked

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        resetData();
    }//GEN-LAST:event_resetButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressTextField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTable employeeTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton submitButton;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables



private void resetData(){
    
    nameTextField.setText("");
    phoneTextField.setText("");
    addressTextField.setText("");
}

public void setTableData(){
    
    List<Employee> employeeList = employeeDao.getAllEmployee();
            String [] cols = {"ID" , "NAME" , "PHONE" , "ADDRESS" };
    String [][] data = new String[employeeList.size()][4];
    int i = 0;
   for(Employee e:employeeList)
   {
       data[i][0] = e.getEmployeeId()+"";
       data[i][1] = e.getEmployeeName();
       data[i][2] = e.getEmployeePhone()+"";
       data[i][3] = e.getEmployeeAddress();
       i++;
   }
    DefaultTableModel model = new DefaultTableModel(data,cols);
    employeeTable.setModel(model);
}
}




